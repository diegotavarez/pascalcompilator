/*
* generated by Xtext
*/
grammar InternalPascal;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.PascalGrammarAccess;

}

@parser::members {
 
 	private PascalGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(PascalGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getProgramsAssignment()); }
(rule__Model__ProgramsAssignment)*
{ after(grammarAccess.getModelAccess().getProgramsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleprogram
entryRuleprogram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleprogram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule program
ruleprogram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprogram_heading
entryRuleprogram_heading 
:
{ before(grammarAccess.getProgram_headingRule()); }
	 ruleprogram_heading
{ after(grammarAccess.getProgram_headingRule()); } 
	 EOF 
;

// Rule program_heading
ruleprogram_heading
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgram_headingAccess().getGroup()); }
(rule__Program_heading__Group__0)
{ after(grammarAccess.getProgram_headingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleblock
entryRuleblock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleblock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule block
ruleblock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledeclaration_part
entryRuledeclaration_part 
:
{ before(grammarAccess.getDeclaration_partRule()); }
	 ruledeclaration_part
{ after(grammarAccess.getDeclaration_partRule()); } 
	 EOF 
;

// Rule declaration_part
ruledeclaration_part
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclaration_partAccess().getGroup()); }
(rule__Declaration_part__Group__0)
{ after(grammarAccess.getDeclaration_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelabel_declaration_part
entryRulelabel_declaration_part 
:
{ before(grammarAccess.getLabel_declaration_partRule()); }
	 rulelabel_declaration_part
{ after(grammarAccess.getLabel_declaration_partRule()); } 
	 EOF 
;

// Rule label_declaration_part
rulelabel_declaration_part
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabel_declaration_partAccess().getGroup()); }
(rule__Label_declaration_part__Group__0)
{ after(grammarAccess.getLabel_declaration_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconstant_definition_part
entryRuleconstant_definition_part 
:
{ before(grammarAccess.getConstant_definition_partRule()); }
	 ruleconstant_definition_part
{ after(grammarAccess.getConstant_definition_partRule()); } 
	 EOF 
;

// Rule constant_definition_part
ruleconstant_definition_part
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstant_definition_partAccess().getGroup()); }
(rule__Constant_definition_part__Group__0)
{ after(grammarAccess.getConstant_definition_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconstant_definition
entryRuleconstant_definition 
:
{ before(grammarAccess.getConstant_definitionRule()); }
	 ruleconstant_definition
{ after(grammarAccess.getConstant_definitionRule()); } 
	 EOF 
;

// Rule constant_definition
ruleconstant_definition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstant_definitionAccess().getGroup()); }
(rule__Constant_definition__Group__0)
{ after(grammarAccess.getConstant_definitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletype_definition_part
entryRuletype_definition_part 
:
{ before(grammarAccess.getType_definition_partRule()); }
	 ruletype_definition_part
{ after(grammarAccess.getType_definition_partRule()); } 
	 EOF 
;

// Rule type_definition_part
ruletype_definition_part
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType_definition_partAccess().getGroup()); }
(rule__Type_definition_part__Group__0)
{ after(grammarAccess.getType_definition_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletype_definition
entryRuletype_definition 
:
{ before(grammarAccess.getType_definitionRule()); }
	 ruletype_definition
{ after(grammarAccess.getType_definitionRule()); } 
	 EOF 
;

// Rule type_definition
ruletype_definition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType_definitionAccess().getGroup()); }
(rule__Type_definition__Group__0)
{ after(grammarAccess.getType_definitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevariable_declaration_part
entryRulevariable_declaration_part 
:
{ before(grammarAccess.getVariable_declaration_partRule()); }
	 rulevariable_declaration_part
{ after(grammarAccess.getVariable_declaration_partRule()); } 
	 EOF 
;

// Rule variable_declaration_part
rulevariable_declaration_part
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariable_declaration_partAccess().getGroup()); }
(rule__Variable_declaration_part__Group__0)
{ after(grammarAccess.getVariable_declaration_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevariable_declaration
entryRulevariable_declaration 
:
{ before(grammarAccess.getVariable_declarationRule()); }
	 rulevariable_declaration
{ after(grammarAccess.getVariable_declarationRule()); } 
	 EOF 
;

// Rule variable_declaration
rulevariable_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariable_declarationAccess().getGroup()); }
(rule__Variable_declaration__Group__0)
{ after(grammarAccess.getVariable_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprocedure_and_function_declaration_part
entryRuleprocedure_and_function_declaration_part 
:
{ before(grammarAccess.getProcedure_and_function_declaration_partRule()); }
	 ruleprocedure_and_function_declaration_part
{ after(grammarAccess.getProcedure_and_function_declaration_partRule()); } 
	 EOF 
;

// Rule procedure_and_function_declaration_part
ruleprocedure_and_function_declaration_part
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getGroup()); }
(rule__Procedure_and_function_declaration_part__Group__0)*
{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement_part
entryRulestatement_part 
:
{ before(grammarAccess.getStatement_partRule()); }
	 rulestatement_part
{ after(grammarAccess.getStatement_partRule()); } 
	 EOF 
;

// Rule statement_part
rulestatement_part
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_partAccess().getGroup()); }
(rule__Statement_part__Group__0)
{ after(grammarAccess.getStatement_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement_sequence
entryRulestatement_sequence 
:
{ before(grammarAccess.getStatement_sequenceRule()); }
	 rulestatement_sequence
{ after(grammarAccess.getStatement_sequenceRule()); } 
	 EOF 
;

// Rule statement_sequence
rulestatement_sequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_sequenceAccess().getGroup()); }
(rule__Statement_sequence__Group__0)
{ after(grammarAccess.getStatement_sequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement
entryRulestatement 
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getGroup()); }
(rule__Statement__Group__0)
{ after(grammarAccess.getStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}











// Entry rule entryRuletype
entryRuletype 
:
{ before(grammarAccess.getTypeRule()); }
	 ruletype
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule type
ruletype
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRulefield_identifier
entryRulefield_identifier 
:
{ before(grammarAccess.getField_identifierRule()); }
	 rulefield_identifier
{ after(grammarAccess.getField_identifierRule()); } 
	 EOF 
;

// Rule field_identifier
rulefield_identifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getField_identifierAccess().getIDENTIFIERTerminalRuleCall()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getField_identifierAccess().getIDENTIFIERTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconstant_identifier
entryRuleconstant_identifier 
:
{ before(grammarAccess.getConstant_identifierRule()); }
	 ruleconstant_identifier
{ after(grammarAccess.getConstant_identifierRule()); } 
	 EOF 
;

// Rule constant_identifier
ruleconstant_identifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstant_identifierAccess().getIDENTIFIERTerminalRuleCall()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getConstant_identifierAccess().getIDENTIFIERTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevariable_identifier
entryRulevariable_identifier 
:
{ before(grammarAccess.getVariable_identifierRule()); }
	 rulevariable_identifier
{ after(grammarAccess.getVariable_identifierRule()); } 
	 EOF 
;

// Rule variable_identifier
rulevariable_identifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariable_identifierAccess().getIDENTIFIERTerminalRuleCall()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getVariable_identifierAccess().getIDENTIFIERTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}











// Entry rule entryRuleidentifier_list
entryRuleidentifier_list 
:
{ before(grammarAccess.getIdentifier_listRule()); }
	 ruleidentifier_list
{ after(grammarAccess.getIdentifier_listRule()); } 
	 EOF 
;

// Rule identifier_list
ruleidentifier_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifier_listAccess().getGroup()); }
(rule__Identifier_list__Group__0)
{ after(grammarAccess.getIdentifier_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenumber
entryRulenumber 
:
{ before(grammarAccess.getNumberRule()); }
	 rulenumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule number
rulenumber
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getAlternatives()); }
(rule__Number__Alternatives)
{ after(grammarAccess.getNumberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleinteger_number
entryRuleinteger_number 
:
{ before(grammarAccess.getInteger_numberRule()); }
	 ruleinteger_number
{ after(grammarAccess.getInteger_numberRule()); } 
	 EOF 
;

// Rule integer_number
ruleinteger_number
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInteger_numberAccess().getDigit_sequenceParserRuleCall()); }
	ruledigit_sequence
{ after(grammarAccess.getInteger_numberAccess().getDigit_sequenceParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulereal_number
entryRulereal_number 
:
{ before(grammarAccess.getReal_numberRule()); }
	 rulereal_number
{ after(grammarAccess.getReal_numberRule()); } 
	 EOF 
;

// Rule real_number
rulereal_number
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReal_numberAccess().getAlternatives()); }
(rule__Real_number__Alternatives)
{ after(grammarAccess.getReal_numberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulescale_factor
entryRulescale_factor 
:
{ before(grammarAccess.getScale_factorRule()); }
	 rulescale_factor
{ after(grammarAccess.getScale_factorRule()); } 
	 EOF 
;

// Rule scale_factor
rulescale_factor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScale_factorAccess().getGroup()); }
(rule__Scale_factor__Group__0)
{ after(grammarAccess.getScale_factorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunsigned_digit_sequence
entryRuleunsigned_digit_sequence 
:
{ before(grammarAccess.getUnsigned_digit_sequenceRule()); }
	 ruleunsigned_digit_sequence
{ after(grammarAccess.getUnsigned_digit_sequenceRule()); } 
	 EOF 
;

// Rule unsigned_digit_sequence
ruleunsigned_digit_sequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnsigned_digit_sequenceAccess().getGroup()); }
(rule__Unsigned_digit_sequence__Group__0)
{ after(grammarAccess.getUnsigned_digit_sequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledigit_sequence
entryRuledigit_sequence 
:
{ before(grammarAccess.getDigit_sequenceRule()); }
	 ruledigit_sequence
{ after(grammarAccess.getDigit_sequenceRule()); } 
	 EOF 
;

// Rule digit_sequence
ruledigit_sequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDigit_sequenceAccess().getGroup()); }
(rule__Digit_sequence__Group__0)
{ after(grammarAccess.getDigit_sequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesign
entryRulesign 
:
{ before(grammarAccess.getSignRule()); }
	 rulesign
{ after(grammarAccess.getSignRule()); } 
	 EOF 
;

// Rule sign
rulesign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignAccess().getAlternatives()); }
(rule__Sign__Alternatives)
{ after(grammarAccess.getSignAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelabel
entryRulelabel 
:
{ before(grammarAccess.getLabelRule()); }
	 rulelabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule label
rulelabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelAccess().getInteger_numberParserRuleCall()); }
	ruleinteger_number
{ after(grammarAccess.getLabelAccess().getInteger_numberParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconstant
entryRuleconstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleconstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule constant
ruleconstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getAlternatives()); }
(rule__Constant__Alternatives)
{ after(grammarAccess.getConstantAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Procedure_and_function_declaration_part__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getProcedure_declarationKeyword_0_0()); }

	'procedure_declaration' 

{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getProcedure_declarationKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getFunction_declarationKeyword_0_1()); }

	'function_declaration' 

{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getFunction_declarationKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSimple_typeKeyword_0()); }

	'simple_type' 

{ after(grammarAccess.getTypeAccess().getSimple_typeKeyword_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getStructured_typeKeyword_1()); }

	'structured_type' 

{ after(grammarAccess.getTypeAccess().getStructured_typeKeyword_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPointer_typeKeyword_2()); }

	'pointer_type' 

{ after(grammarAccess.getTypeAccess().getPointer_typeKeyword_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getType_identifierKeyword_3()); }

	'type_identifier' 

{ after(grammarAccess.getTypeAccess().getType_identifierKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getInteger_numberParserRuleCall_0()); }
	ruleinteger_number
{ after(grammarAccess.getNumberAccess().getInteger_numberParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getReal_numberParserRuleCall_1()); }
	rulereal_number
{ after(grammarAccess.getNumberAccess().getReal_numberParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Real_number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReal_numberAccess().getGroup_0()); }
(rule__Real_number__Group_0__0)
{ after(grammarAccess.getReal_numberAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getReal_numberAccess().getGroup_1()); }
(rule__Real_number__Group_1__0)
{ after(grammarAccess.getReal_numberAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scale_factor__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScale_factorAccess().getEKeyword_0_0()); }

	'E' 

{ after(grammarAccess.getScale_factorAccess().getEKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getScale_factorAccess().getEKeyword_0_1()); }

	'e' 

{ after(grammarAccess.getScale_factorAccess().getEKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sign__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getSignAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getSignAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getSignAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getGroup_0()); }
(rule__Constant__Group_0__0)
{ after(grammarAccess.getConstantAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getConstantAccess().getSTRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getConstant_identifierParserRuleCall_0_1_0()); }
	ruleconstant_identifier
{ after(grammarAccess.getConstantAccess().getConstant_identifierParserRuleCall_0_1_0()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getNumberParserRuleCall_0_1_1()); }
	rulenumber
{ after(grammarAccess.getConstantAccess().getNumberParserRuleCall_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getProgram_headingParserRuleCall_0()); }
	ruleprogram_heading
{ after(grammarAccess.getProgramAccess().getProgram_headingParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getBlockParserRuleCall_1()); }
	ruleblock
{ after(grammarAccess.getProgramAccess().getBlockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getProgramAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Program_heading__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program_heading__Group__0__Impl
	rule__Program_heading__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgram_headingAccess().getProgramKeyword_0()); }

	'program' 

{ after(grammarAccess.getProgram_headingAccess().getProgramKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program_heading__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program_heading__Group__1__Impl
	rule__Program_heading__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgram_headingAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getProgram_headingAccess().getIDENTIFIERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program_heading__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program_heading__Group__2__Impl
	rule__Program_heading__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgram_headingAccess().getGroup_2()); }
(rule__Program_heading__Group_2__0)?
{ after(grammarAccess.getProgram_headingAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program_heading__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program_heading__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgram_headingAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getProgram_headingAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Program_heading__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program_heading__Group_2__0__Impl
	rule__Program_heading__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgram_headingAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getProgram_headingAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program_heading__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program_heading__Group_2__1__Impl
	rule__Program_heading__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgram_headingAccess().getIdentifier_listParserRuleCall_2_1()); }
	ruleidentifier_list
{ after(grammarAccess.getProgram_headingAccess().getIdentifier_listParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program_heading__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program_heading__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgram_headingAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getProgram_headingAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getDeclaration_partParserRuleCall_0()); }
	ruledeclaration_part
{ after(grammarAccess.getBlockAccess().getDeclaration_partParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatement_partParserRuleCall_1()); }
	rulestatement_part
{ after(grammarAccess.getBlockAccess().getStatement_partParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration_part__Group__0__Impl
	rule__Declaration_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaration_partAccess().getLabel_declaration_partParserRuleCall_0()); }
(	rulelabel_declaration_part)?
{ after(grammarAccess.getDeclaration_partAccess().getLabel_declaration_partParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration_part__Group__1__Impl
	rule__Declaration_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaration_partAccess().getConstant_definition_partParserRuleCall_1()); }
(	ruleconstant_definition_part)?
{ after(grammarAccess.getDeclaration_partAccess().getConstant_definition_partParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_part__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration_part__Group__2__Impl
	rule__Declaration_part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_part__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaration_partAccess().getType_definition_partParserRuleCall_2()); }
(	ruletype_definition_part)?
{ after(grammarAccess.getDeclaration_partAccess().getType_definition_partParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_part__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration_part__Group__3__Impl
	rule__Declaration_part__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_part__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaration_partAccess().getVariable_declaration_partParserRuleCall_3()); }
(	rulevariable_declaration_part)?
{ after(grammarAccess.getDeclaration_partAccess().getVariable_declaration_partParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_part__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration_part__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_part__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaration_partAccess().getProcedure_and_function_declaration_partParserRuleCall_4()); }
	ruleprocedure_and_function_declaration_part
{ after(grammarAccess.getDeclaration_partAccess().getProcedure_and_function_declaration_partParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Label_declaration_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label_declaration_part__Group__0__Impl
	rule__Label_declaration_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabel_declaration_partAccess().getLabelKeyword_0()); }

	'label' 

{ after(grammarAccess.getLabel_declaration_partAccess().getLabelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label_declaration_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label_declaration_part__Group__1__Impl
	rule__Label_declaration_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabel_declaration_partAccess().getLabelParserRuleCall_1()); }
	rulelabel
{ after(grammarAccess.getLabel_declaration_partAccess().getLabelParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label_declaration_part__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label_declaration_part__Group__2__Impl
	rule__Label_declaration_part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration_part__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabel_declaration_partAccess().getGroup_2()); }
(rule__Label_declaration_part__Group_2__0)*
{ after(grammarAccess.getLabel_declaration_partAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label_declaration_part__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label_declaration_part__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration_part__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabel_declaration_partAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getLabel_declaration_partAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Label_declaration_part__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label_declaration_part__Group_2__0__Impl
	rule__Label_declaration_part__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration_part__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabel_declaration_partAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getLabel_declaration_partAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label_declaration_part__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label_declaration_part__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration_part__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabel_declaration_partAccess().getLabelParserRuleCall_2_1()); }
	rulelabel
{ after(grammarAccess.getLabel_declaration_partAccess().getLabelParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant_definition_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition_part__Group__0__Impl
	rule__Constant_definition_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definition_partAccess().getConstKeyword_0()); }

	'const' 

{ after(grammarAccess.getConstant_definition_partAccess().getConstKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition_part__Group__1__Impl
	rule__Constant_definition_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definition_partAccess().getConstant_definitionParserRuleCall_1()); }
	ruleconstant_definition
{ after(grammarAccess.getConstant_definition_partAccess().getConstant_definitionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition_part__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition_part__Group__2__Impl
	rule__Constant_definition_part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definition_partAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getConstant_definition_partAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition_part__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition_part__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definition_partAccess().getGroup_3()); }
(rule__Constant_definition_part__Group_3__0)*
{ after(grammarAccess.getConstant_definition_partAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Constant_definition_part__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition_part__Group_3__0__Impl
	rule__Constant_definition_part__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definition_partAccess().getConstant_definitionParserRuleCall_3_0()); }
	ruleconstant_definition
{ after(grammarAccess.getConstant_definition_partAccess().getConstant_definitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition_part__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition_part__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definition_partAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getConstant_definition_partAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant_definition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition__Group__0__Impl
	rule__Constant_definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definitionAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getConstant_definitionAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition__Group__1__Impl
	rule__Constant_definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definitionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getConstant_definitionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definitionAccess().getConstantParserRuleCall_2()); }
	ruleconstant
{ after(grammarAccess.getConstant_definitionAccess().getConstantParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type_definition_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition_part__Group__0__Impl
	rule__Type_definition_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definition_partAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getType_definition_partAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition_part__Group__1__Impl
	rule__Type_definition_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definition_partAccess().getType_definitionParserRuleCall_1()); }
	ruletype_definition
{ after(grammarAccess.getType_definition_partAccess().getType_definitionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition_part__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition_part__Group__2__Impl
	rule__Type_definition_part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definition_partAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getType_definition_partAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition_part__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition_part__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definition_partAccess().getGroup_3()); }
(rule__Type_definition_part__Group_3__0)*
{ after(grammarAccess.getType_definition_partAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Type_definition_part__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition_part__Group_3__0__Impl
	rule__Type_definition_part__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definition_partAccess().getType_definitionParserRuleCall_3_0()); }
	ruletype_definition
{ after(grammarAccess.getType_definition_partAccess().getType_definitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition_part__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition_part__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definition_partAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getType_definition_partAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type_definition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition__Group__0__Impl
	rule__Type_definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definitionAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getType_definitionAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition__Group__1__Impl
	rule__Type_definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definitionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getType_definitionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definitionAccess().getTypeParserRuleCall_2()); }
	ruletype
{ after(grammarAccess.getType_definitionAccess().getTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable_declaration_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration_part__Group__0__Impl
	rule__Variable_declaration_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaration_partAccess().getVarKeyword_0()); }

	'var' 

{ after(grammarAccess.getVariable_declaration_partAccess().getVarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration_part__Group__1__Impl
	rule__Variable_declaration_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaration_partAccess().getVariable_declarationParserRuleCall_1()); }
	rulevariable_declaration
{ after(grammarAccess.getVariable_declaration_partAccess().getVariable_declarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration_part__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration_part__Group__2__Impl
	rule__Variable_declaration_part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration_part__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration_part__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaration_partAccess().getGroup_3()); }
(rule__Variable_declaration_part__Group_3__0)*
{ after(grammarAccess.getVariable_declaration_partAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Variable_declaration_part__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration_part__Group_3__0__Impl
	rule__Variable_declaration_part__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaration_partAccess().getVariable_declarationParserRuleCall_3_0()); }
	rulevariable_declaration
{ after(grammarAccess.getVariable_declaration_partAccess().getVariable_declarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration_part__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration_part__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__0__Impl
	rule__Variable_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getIdentifier_listParserRuleCall_0()); }
	ruleidentifier_list
{ after(grammarAccess.getVariable_declarationAccess().getIdentifier_listParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__1__Impl
	rule__Variable_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getVariable_declarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getTypeParserRuleCall_2()); }
	ruletype
{ after(grammarAccess.getVariable_declarationAccess().getTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Procedure_and_function_declaration_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure_and_function_declaration_part__Group__0__Impl
	rule__Procedure_and_function_declaration_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_and_function_declaration_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getAlternatives_0()); }
(rule__Procedure_and_function_declaration_part__Alternatives_0)
{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_and_function_declaration_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure_and_function_declaration_part__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_and_function_declaration_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_part__Group__0__Impl
	rule__Statement_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_partAccess().getBeginKeyword_0()); }

	'begin' 

{ after(grammarAccess.getStatement_partAccess().getBeginKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_part__Group__1__Impl
	rule__Statement_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_partAccess().getStatement_sequenceParserRuleCall_1()); }
	rulestatement_sequence
{ after(grammarAccess.getStatement_partAccess().getStatement_sequenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_part__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_part__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_part__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_partAccess().getEndKeyword_2()); }

	'end' 

{ after(grammarAccess.getStatement_partAccess().getEndKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement_sequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_sequence__Group__0__Impl
	rule__Statement_sequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_sequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_sequenceAccess().getStatementParserRuleCall_0()); }
	rulestatement
{ after(grammarAccess.getStatement_sequenceAccess().getStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_sequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_sequence__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_sequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_sequenceAccess().getStatementParserRuleCall_1()); }
(	rulestatement)*
{ after(grammarAccess.getStatement_sequenceAccess().getStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementKeyword_0()); }

	'statement' 

{ after(grammarAccess.getStatementAccess().getStatementKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Identifier_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_list__Group__0__Impl
	rule__Identifier_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_listAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getIdentifier_listAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_listAccess().getGroup_1()); }
(rule__Identifier_list__Group_1__0)*
{ after(grammarAccess.getIdentifier_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Identifier_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_list__Group_1__0__Impl
	rule__Identifier_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_listAccess().getIDENTIFIERTerminalRuleCall_1_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getIdentifier_listAccess().getIDENTIFIERTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Real_number__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real_number__Group_0__0__Impl
	rule__Real_number__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_number__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReal_numberAccess().getDigit_sequenceParserRuleCall_0_0()); }
	ruledigit_sequence
{ after(grammarAccess.getReal_numberAccess().getDigit_sequenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Real_number__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real_number__Group_0__1__Impl
	rule__Real_number__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_number__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReal_numberAccess().getFullStopKeyword_0_1()); }

	'.' 

{ after(grammarAccess.getReal_numberAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Real_number__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real_number__Group_0__2__Impl
	rule__Real_number__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_number__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReal_numberAccess().getUnsigned_digit_sequenceParserRuleCall_0_2()); }
(	ruleunsigned_digit_sequence)?
{ after(grammarAccess.getReal_numberAccess().getUnsigned_digit_sequenceParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Real_number__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real_number__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_number__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReal_numberAccess().getScale_factorParserRuleCall_0_3()); }
	rulescale_factor
{ after(grammarAccess.getReal_numberAccess().getScale_factorParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Real_number__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real_number__Group_1__0__Impl
	rule__Real_number__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_number__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReal_numberAccess().getDigit_sequenceParserRuleCall_1_0()); }
	ruledigit_sequence
{ after(grammarAccess.getReal_numberAccess().getDigit_sequenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Real_number__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real_number__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Real_number__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReal_numberAccess().getScale_factorParserRuleCall_1_1()); }
	rulescale_factor
{ after(grammarAccess.getReal_numberAccess().getScale_factorParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Scale_factor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scale_factor__Group__0__Impl
	rule__Scale_factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scale_factor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScale_factorAccess().getAlternatives_0()); }
(rule__Scale_factor__Alternatives_0)
{ after(grammarAccess.getScale_factorAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scale_factor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scale_factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scale_factor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScale_factorAccess().getDigit_sequenceParserRuleCall_1()); }
	ruledigit_sequence
{ after(grammarAccess.getScale_factorAccess().getDigit_sequenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unsigned_digit_sequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unsigned_digit_sequence__Group__0__Impl
	rule__Unsigned_digit_sequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_digit_sequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnsigned_digit_sequenceAccess().getDIGITTerminalRuleCall_0()); }
	RULE_DIGIT
{ after(grammarAccess.getUnsigned_digit_sequenceAccess().getDIGITTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unsigned_digit_sequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unsigned_digit_sequence__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_digit_sequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnsigned_digit_sequenceAccess().getDIGITTerminalRuleCall_1()); }
(	RULE_DIGIT)*
{ after(grammarAccess.getUnsigned_digit_sequenceAccess().getDIGITTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Digit_sequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Digit_sequence__Group__0__Impl
	rule__Digit_sequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Digit_sequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigit_sequenceAccess().getSignParserRuleCall_0()); }
(	rulesign)?
{ after(grammarAccess.getDigit_sequenceAccess().getSignParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Digit_sequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Digit_sequence__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Digit_sequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigit_sequenceAccess().getUnsigned_digit_sequenceParserRuleCall_1()); }
	ruleunsigned_digit_sequence
{ after(grammarAccess.getDigit_sequenceAccess().getUnsigned_digit_sequenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group_0__0__Impl
	rule__Constant__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getSignParserRuleCall_0_0()); }
(	rulesign)?
{ after(grammarAccess.getConstantAccess().getSignParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getAlternatives_0_1()); }
(rule__Constant__Alternatives_0_1)
{ after(grammarAccess.getConstantAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__ProgramsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getProgramsProgramParserRuleCall_0()); }
	ruleprogram{ after(grammarAccess.getModelAccess().getProgramsProgramParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



RULE_IDENTIFIER : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_LETTER : ('a'..'z'|'A'..'Z');

RULE_DIGIT : '0'..'9';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


