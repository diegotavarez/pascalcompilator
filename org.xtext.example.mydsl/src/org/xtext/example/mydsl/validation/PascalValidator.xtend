/*
 * generated by Xtext
 */
package org.xtext.example.mydsl.validation

import org.eclipse.xtext.validation.Check
import org.xtext.example.mydsl.pascal.variable_declaration
import org.xtext.example.mydsl.pascal.variable_declaration_part
import org.eclipse.emf.common.util.EList
import java.util.ArrayList
import java.io.Console

//import org.eclipse.xtext.validation.Check
/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class PascalValidator extends AbstractPascalValidator {

	//  public static val INVALID_NAME = 'invalidName'
	//
	//	@Check
	//	def checkGreetingStartsWithCapital(Greeting greeting) {
	//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
	//			warning('Name should start with a capital', 
	//					MyDslPackage.Literals.GREETING__NAME,
	//					INVALID_NAME)
	//		}
	//	}
	//	@Check
	//	def checkvariable_declaration_part(variable_declaration_part declarations) {
	//		var variableDeclarations = declarations.variableDeclarations
	//
	//		for (var i = 0; i < variableDeclarations.size; i++) {
	//			var declaracao_atual = variableDeclarations.get(i);
	//			var declaracao_atual_ids = declaracao_atual.identifierList.ids;
	//
	//			for (var j = 0; j < declaracao_atual_ids.size; j++) {
	//				var idAtual = declaracao_atual_ids.get(j)
	//				for (var k = j + 1; k < declaracao_atual_ids.size - 1; k++) {
	//					if (idAtual.equals(declaracao_atual_ids.get(k))) {
	//						error("Não pode ter variaveis com mesmo nome", null);
	//					}
	//
	//				}
	//			}
	//		}
	//
	//	}
	//	@Check
	//	def checkvariable_declaration_part(variable_declaration_part declarations) {
	//		var variableDeclarations = declarations.variableDeclarations
	//
	//		for (var i = 0; i < variableDeclarations.size; i++) {
	//			var declaracao_atual = variableDeclarations.get(i);
	//			checkvariable_declaration(declaracao_atual);
	//		}
	//	}
	//	@Check
	//	def checkvariable_declaration(variable_declaration declaration) {
	//		var declaracao_atual_ids = declaration.identifierList.ids;
	//		for (var j = 0; j < declaracao_atual_ids.size; j++) {
	//			var idAtual = declaracao_atual_ids.get(j)
	//			for (var k = j + 1; k < declaracao_atual_ids.size; k++) {
	//				if (idAtual.equals(declaracao_atual_ids.get(k))) {
	//					error("Não pode ter variaveis com mesmo nome na mesma declaracao", null);
	//				}
	//
	//			}
	//		}
	//	}
	@Check
	def checkvariable_declaration_part(variable_declaration_part declarations) {
		var variableDeclarations = declarations.variableDeclarations
		var EList<String> variable_ids = {
		}

		for (var i = 0; i < variableDeclarations.size; i++) {

			var declaracao_atual = variableDeclarations.get(i);
			var declaracao_atual_ids = declaracao_atual.identifierList.ids;

			for (var id_i = 0; id_i < declaracao_atual_ids.size; id_i++) {
				if (!variable_ids.contains(declaracao_atual_ids.get(id_i))) {

					variable_ids.add(declaracao_atual_ids.get(id_i))
					
				} else {
					error("FERROU", null)
				}
			}

		}

	}

}
