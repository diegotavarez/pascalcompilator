grammar org.xtext.example.mydsl.Pascal with org.eclipse.xtext.common.Terminals

generate pascal "http://www.xtext.org/example/mydsl/Pascal"

Model:
	programs+=program*;
	
Greeting:
	'Hello' name=ID '!';

//PROGRAMS AND BLOCKS
program:
	program_heading block ".";
program_heading:
	'program' identifier "(" identifier_list ")" ";";
block:
	declaration_part statement_part;
declaration_part:
	'declaration_part';
statement_part:
	'statement_part';	
label_declaration_part:
	'label' label ("," label)* ";";
 type_definition:
	identifier "=" type;

//EXPRESSIONS
relational_operator:
	"=" | "<>" | "<" | "<=" | ">" | ">=" | "in";
addition_operator:
	"+" | "-" | 'or';
multiplication_operator:
"*" | "/" | 'div' | 'mod' | 'and';
entire_variable:
	variable_identifier | field_identifier; 

//TYPES
type:
	'simple_type' | 'structured_type' | 'pointer_type' | 'type_identifier';	
enumerated_type:
	"(" identifier_list ")"; 

//VARIABLE AND IDENTIFIER CATEGORIES
identifier:
	letter identifier2;
identifier2:
	(letter | digit)*;
field_identifier:
	identifier;
constant_identifier:
	identifier;
variable_identifier:
	identifier;
type_identifier:
	identifier;
procedure_identifier:
	identifier;
function_identifier:
	identifier;
bound_identifier:
	identifier;

//LOW LEVEL DEFINITIONS
identifier_list:
	identifier ("," identifier)*;
integer_number:
        digit_sequence;
scale_factor:
	("E" | "e")digit_sequence;
unsigned_digit_sequence:
	digit (digit)*;
digit_sequence:
	(sign)? unsigned_digit_sequence;
sign:
	"+" | "-";
letter:
	"A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z";
digit:
	"0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";
label:
	integer_number;